{"version":3,"sources":["Game.js","index.js","Game.module.css"],"names":["toSymbols","elm","lines","Game","state","grids","player","winner","handleClick","index","setState","reset","getWinner","line","i","j","k","prevProps","prevState","this","className","style","board","map","grid","onClick","bottom","Component","render","document","getElementById","module","exports"],"mappings":"0MAGMA,EAAY,SAAAC,GACd,OAAQA,GACJ,KAAK,EAAG,MAAO,GACf,KAAK,EAAG,MAAO,IACf,QAAS,MAAO,MAIlBC,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAgFIC,E,4MA5EXC,MAAQ,CACJC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCC,OAAQ,EACRC,OAAQ,G,EAWZC,YAAc,SAAAC,GAGV,GAA0B,IAAtB,EAAKL,MAAMG,OAAf,CAEA,IAAMF,EAAK,YAAO,EAAKD,MAAMC,OAGR,IAAjBA,EAAMI,KAEVJ,EAAMI,GAAS,EAAKL,MAAME,OAE1B,EAAKI,SAAS,CACVL,QACAC,QAAS,EAAKF,MAAME,Y,EAI5BK,MAAQ,WACJ,EAAKD,SAAS,CACVL,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCC,OAAQ,K,EAIhBM,UAAY,WAAO,IAAD,EACNP,EAAU,EAAKD,MAAfC,MADM,cAEKH,GAFL,IAEd,2BAA0B,CAAC,IAAhBW,EAAe,sBAEJA,EAFI,GAEfC,EAFe,KAEZC,EAFY,KAETC,EAFS,KAGtB,GAAIX,EAAMS,KAAOT,EAAMU,IAAMV,EAAMU,KAAOV,EAAMW,IAAmB,IAAbX,EAAMS,GAExD,OAAOT,EAAMS,IAPP,8BAWd,OAAO,G,wDA5CX,SAAmBG,EAAWC,GACtBA,EAAUb,QAAUc,KAAKf,MAAMC,OAC/Bc,KAAKT,SAAS,CACVH,OAAQY,KAAKP,gB,oBA6CzB,WAAU,IAAD,SAC6BO,KAAKf,MAA/BC,EADH,EACGA,MAAOC,EADV,EACUA,OAAQC,EADlB,EACkBA,OACvB,OACI,gCACI,qBAAKa,UAAWC,IAAMC,MAAtB,SACKjB,EAAMkB,KAAI,SAACtB,EAAKQ,GAAN,OACP,qBAAKW,UAAWC,IAAMG,KAElBC,QAAS,kBAAM,EAAKjB,YAAYC,IAFpC,SAGKT,EAAUC,IAFNQ,QAKjB,sBAAKW,UAAWC,IAAMK,OAAtB,UACI,2DAAU1B,EAAUM,MACpB,2DAAUN,EAAUO,MACpB,wBAAQkB,QAASN,KAAKR,MAAtB,8B,GAtEDgB,aClBnBC,iBAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,U,kBCHzCC,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,OAAS,wB","file":"static/js/main.65b57ce5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport style from './Game.module.css'\r\n\r\nconst toSymbols = elm => {\r\n    switch (elm) {\r\n        case 0: return '';\r\n        case 1: return 'O';\r\n        default: return 'X';\r\n    }\r\n}\r\n\r\nconst lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n];\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        grids: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n        player: 1,\r\n        winner: 0,\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.grids !== this.state.grids) {\r\n            this.setState({\r\n                winner: this.getWinner(),\r\n            })\r\n        }\r\n    }\r\n\r\n    handleClick = index => {\r\n\r\n        // console.log(index);\r\n        if (this.state.winner !== 0) return;//有winner就不能再繼續\r\n\r\n        const grids = [...this.state.grids];//copy一份\r\n\r\n\r\n        if (grids[index] !== 0) return;//避免重新點同一格會變\r\n\r\n        grids[index] = this.state.player;//判斷現在所點選位置\r\n\r\n        this.setState({\r\n            grids,\r\n            player: -this.state.player,\r\n        })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            grids: [0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n            player: 1,\r\n        });\r\n    }\r\n\r\n    getWinner = () => {\r\n        const { grids } = this.state\r\n        for (const line of lines) {\r\n\r\n            const [i, j, k] = line;\r\n            if (grids[i] === grids[j] && grids[j] === grids[k] && grids[i] !== 0) {\r\n\r\n                return grids[i]\r\n\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n\r\n    render() {\r\n        const { grids, player, winner } = this.state\r\n        return (\r\n            <div>\r\n                <div className={style.board}>\r\n                    {grids.map((elm, index) => (\r\n                        <div className={style.grid}\r\n                            key={index}\r\n                            onClick={() => this.handleClick(index)}>\r\n                            {toSymbols(elm)}</div>\r\n                    ))}\r\n                </div>\r\n                <div className={style.bottom}>\r\n                    <h3>起手玩家:{toSymbols(player)}</h3>\r\n                    <h3>勝利玩家:{toSymbols(winner)}</h3>\r\n                    <button onClick={this.reset}>Replay</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Game;","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Game from './Game'\r\n\r\nrender(<Game />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Game_board__2Pleh\",\"grid\":\"Game_grid__aNL6X\",\"bottom\":\"Game_bottom__3Ey_Y\"};"],"sourceRoot":""}